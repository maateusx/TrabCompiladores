(module
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (import "env" "printf" (func $printf (param i32 i32) (result i32)))
 (import "env" "scanf" (func $scanf (param i32 i32) (result i32)))
 (table 0 anyfunc)
 (memory $0 1)
 (data (i32.const 16) "Digite um n\c3\bamero: \00")
 (data (i32.const 48) "%d\00")
 (data (i32.const 64) "Ao total, foram digitados %d n\c3\bameros no intervalo entre 10 e 150\n\00")
 (export "memory" (memory $0))
 (export "main" (func $main))
 (func $main (; 2 ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (i32.store offset=4
   (i32.const 0)
   (tee_local $2
    (i32.sub
     (i32.load offset=4
      (i32.const 0)
     )
     (i32.const 32)
    )
   )
  )
  (set_local $0
   (i32.const 5)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $label$0
   (drop
    (call $printf
     (i32.const 16)
     (i32.const 0)
    )
   )
   (i32.store offset=16
    (get_local $2)
    (i32.add
     (get_local $2)
     (i32.const 28)
    )
   )
   (drop
    (call $scanf
     (i32.const 48)
     (i32.add
      (get_local $2)
      (i32.const 16)
     )
    )
   )
   (set_local $1
    (i32.add
     (get_local $1)
     (i32.lt_u
      (i32.add
       (i32.load offset=28
        (get_local $2)
       )
       (i32.const -10)
      )
      (i32.const 141)
     )
    )
   )
   (br_if $label$0
    (tee_local $0
     (i32.add
      (get_local $0)
      (i32.const -1)
     )
    )
   )
  )
  (i32.store
   (get_local $2)
   (get_local $1)
  )
  (drop
   (call $printf
    (i32.const 64)
    (get_local $2)
   )
  )
  (i32.store offset=4
   (i32.const 0)
   (i32.add
    (get_local $2)
    (i32.const 32)
   )
  )
  (i32.const 0)
 )
)
