(module
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (import "env" "printf" (func $printf (param i32 i32) (result i32)))
 (import "env" "scanf" (func $scanf (param i32 i32) (result i32)))
 (table 0 anyfunc)
 (memory $0 1)
 (data (i32.const 16) "Digite um n\c3\bamero: \00")
 (data (i32.const 48) "%d\00")
 (data (i32.const 64) "O numero %d \c3\a9 maior que 10 \n\00")
 (data (i32.const 96) "O numero %d \c3\a9 menor que 10 \n\00")
 (export "memory" (memory $0))
 (export "main" (func $main))
 (func $main (; 2 ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (i32.store offset=4
   (i32.const 0)
   (tee_local $1
    (i32.sub
     (i32.load offset=4
      (i32.const 0)
     )
     (i32.const 48)
    )
   )
  )
  (i32.store offset=44
   (get_local $1)
   (i32.const 1)
  )
  (loop $label$0
   (drop
    (call $printf
     (i32.const 16)
     (i32.const 0)
    )
   )
   (i32.store offset=32
    (get_local $1)
    (i32.add
     (get_local $1)
     (i32.const 44)
    )
   )
   (drop
    (call $scanf
     (i32.const 48)
     (i32.add
      (get_local $1)
      (i32.const 32)
     )
    )
   )
   (block $label$1
    (block $label$2
     (br_if $label$2
      (i32.lt_s
       (tee_local $0
        (i32.load offset=44
         (get_local $1)
        )
       )
       (i32.const 11)
      )
     )
     (i32.store
      (get_local $1)
      (get_local $0)
     )
     (drop
      (call $printf
       (i32.const 64)
       (get_local $1)
      )
     )
     (br $label$1)
    )
    (i32.store offset=16
     (get_local $1)
     (get_local $0)
    )
    (drop
     (call $printf
      (i32.const 96)
      (i32.add
       (get_local $1)
       (i32.const 16)
      )
     )
    )
   )
   (br_if $label$0
    (i32.load offset=44
     (get_local $1)
    )
   )
  )
  (i32.store offset=4
   (i32.const 0)
   (i32.add
    (get_local $1)
    (i32.const 48)
   )
  )
  (i32.const 0)
 )
)
